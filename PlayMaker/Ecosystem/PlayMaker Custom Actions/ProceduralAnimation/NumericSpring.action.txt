{
"__ECO__":"__PACKAGE__",
"Type":"Action",
"unitypackage":"PlayMaker/Ecosystem/PlayMaker Custom Actions/ProceduralAnimation/NumericSpring.unitypackage",
"pingAssetPath":"Assets/PlayMaker Custom Actions/ProceduralAnimation/NumericSpring.cs",
"keywords":" version EcoChangeLogStart Note creation Thanks Magnus Tumblehead suggestion Source EcoChangeLogEnd ProceduralAnimation not physics totally driven Runs every frame NumericSpring Setup will multiplied 2pi FsmFloat Reset targetPosition angularFrequency Mathf dampingRatio Sourec http allenchou net math precise control Computes numerical specify initial related parameters smooth You can apply technique sorts numeric properties some common ones being rotation scale summary desired your result angular frequency radians completes full period second 1Hz there just continues indefinitely between zero underdamped happens magnitude decreases signifies critically where point stops showing oscillation converging value exponentially Any above means overdamped effect springing becomes more draggy damping ratio increases step Deltatime framerate indepedant behavior Position The Velocity ComputeSpring zeta omega hhoo hoo detX detV detInv"
}